# A Single Deployment for both TCP and UDP
apiVersion: apps/v1
kind: Deployment
metadata:
  name: multi-protocol-echo-deployment
  labels:
    app: multi-protocol-echo
spec:
  replicas: 1
  selector:
    matchLabels:
      app: multi-protocol-echo
  template:
    metadata:
      labels:
        app: multi-protocol-echo
    spec:
      containers:
      - name: multi-protocol-server
        image: ealen/echo-server
        # Define both TCP and UDP ports for the container
        ports:
        - name: tcp-port
          containerPort: 8080
          protocol: TCP
        - name: udp-port
          containerPort: 8081
          protocol: UDP
        # Use environment variables to tell the image which ports to listen on
        env:
        - name: TCP_PORT
          value: "8080"
        - name: UDP_PORT
          value: "8081"
---
# A Single Service exposing both TCP and UDP ports
apiVersion: v1
kind: Service
metadata:
  name: multi-protocol-echo-service
spec:
  selector:
    app: multi-protocol-echo
  ports:
    - name: tcp
      protocol: TCP
      port: 8080
      targetPort: tcp-port # Target the named port from the deployment
    - name: udp
      protocol: UDP
      port: 8081
      targetPort: udp-port # Target the named port from the deployment
  type: ClusterIP

# To test:
# kubectl port-forward service/multi-protocol-echo-service 9090:8080
# kubectl port-forward service/multi-protocol-echo-service 9091:8081
# nc localhost 9090
# nc -u localhost 9091

